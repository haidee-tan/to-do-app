{"version":3,"sources":["components/AddTaskForm.js","components/imgs/plus.png","components/imgs/minus.png","components/AddTaskBtnDiv.js","components/imgs/success.png","components/imgs/remove.png","components/TaskRow.js","components/TaskList.js","components/ToDoApp.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["connect","dispatch","addTask","name","type","payload","props","useState","setName","error","setError","className","id","value","onChange","e","target","onClick","trim","AddTaskBtnDiv","displayAddTaskForm","setDisplayAddTaskForm","displayAddTask","src","minus","alt","plus","markAsDone","deleteTask","task","filterStatus","success","remove","TaskList","filteredList","tasks","filter","status","length","map","state","href","title","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","tasksCopy","taskIndex","action","newTask","updTasks","findIndex","taskItem","splice","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cddec511.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst AddTaskForm = (props) => {\r\n    let [name, setName] = useState(\"\");\r\n    let [error, setError] = useState(\"\");\r\n    const taskInputHandler = (e) => {\r\n        setName(e.target.value);\r\n    };\r\n    const addBtnHandler = () => {\r\n        if (name.trim() !== \"\") {\r\n            props.addTask(name);\r\n            setError(\"\");\r\n        }\r\n        else {\r\n            setError(\"This field is required.\");\r\n        }\r\n        setName(\"\")\r\n    };\r\n    return (\r\n        <div className=\"main-table add-task-table\">\r\n            <div className=\"task-heading\">Task Name</div>\r\n            <input\r\n                id=\"add-task-input\"\r\n                type = \"text\"\r\n                value = {name}\r\n                onChange = {taskInputHandler}\r\n            />\r\n            <br/>\r\n            <small>{error}</small>\r\n            <div className = \"for-button\">\r\n                <button\r\n                    className = \"add-task-btn\"\r\n                    onClick = {addBtnHandler}\r\n                >Add Task\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addTask: (name) => dispatch({type: \"ADD_TASK\", payload: name})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddTaskForm);","export default __webpack_public_path__ + \"static/media/plus.04b527f2.png\";","export default __webpack_public_path__ + \"static/media/minus.8bca3089.png\";","import AddTaskForm from \"./AddTaskForm\";\r\nimport plus from \"./imgs/plus.png\";\r\nimport minus from \"./imgs/minus.png\";\r\nimport {useState} from \"react\";\r\n\r\nconst AddTaskBtnDiv = (props) => {\r\n    let [displayAddTaskForm, setDisplayAddTaskForm] = useState(false);\r\n    const displayAddTask = () => {\r\n        setDisplayAddTaskForm(!displayAddTaskForm)\r\n    }\r\n    return(\r\n        <div className=\"add-task-box\">\r\n            {\r\n                displayAddTaskForm === true ?\r\n                <div className=\"add-task-box\">\r\n                    <button className=\"display-btn\" onClick = {displayAddTask}>\r\n                        <img src={minus} alt=\"close\" />\r\n                    </button>\r\n                    <AddTaskForm\r\n                        addTask = {props.addTask}\r\n                    />\r\n                </div>\r\n                :\r\n                <div className=\"add-task-box\">\r\n                    <button className=\"display-btn\" onClick = {displayAddTask}>\r\n                    <img src={plus} alt=\"add task\" />\r\n                    </button>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTaskBtnDiv","export default __webpack_public_path__ + \"static/media/success.a9a1e2c2.png\";","export default __webpack_public_path__ + \"static/media/remove.f2ffd9d2.png\";","import success from \"./imgs/success.png\"\r\nimport remove from \"./imgs/remove.png\"\r\nimport {connect} from \"react-redux\";\r\n\r\nconst TaskRow = (props) => {\r\n    return (\r\n        <div className=\"task-row\">\r\n            <div className=\"task-name\">{props.task.name}</div>\r\n            <div className=\"task-btn-div\">\r\n                {\r\n                    props.filterStatus === \"pending\" ?\r\n                    <div className=\"pending-btn-div\">\r\n                        <button onClick={() => props.markAsDone(props.task.name)}>\r\n                            <img src={success} alt=\"done\" />\r\n                        </button>\r\n                    </div>\r\n                    :\r\n                    <div className=\"pending-btn-div\"></div>\r\n                }\r\n                <div className=\"delete-btn-div\">\r\n                    <button onClick={() => props.deleteTask(props.task.name)}>\r\n                        <img src={remove} alt=\"remove\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n        markAsDone: (name) => dispatch({type: \"MARK_AS_DONE\", payload: name}),\r\n        deleteTask: (name) => dispatch({type: \"DELETE_TASK\", payload: name})\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskRow);","import TaskRow from \"./TaskRow\";\r\n\r\nconst TaskList = (props) => {\r\n    let filteredList = props.tasks.filter(task => task.status === props.filterStatus);\r\n    return(    \r\n        filteredList.length !== 0 ?\r\n        <div className=\"main-table\">\r\n            <div className=\"task-heading\">\r\n                <div>{props.filterStatus} Tasks</div>\r\n            </div>\r\n            <div className=\"task-body\">\r\n                {\r\n                    filteredList.map( (task) =>\r\n                        (\r\n                            <TaskRow\r\n                                key = {task.name}\r\n                                task = {task}\r\n                                filterStatus = {props.filterStatus}\r\n                                markAsDone = {props.markAsDone}\r\n                                deleteTask = {props.deleteTask}\r\n                            />\r\n                        )\r\n                    )\r\n                } \r\n            </div>\r\n        </div>\r\n        :\r\n        <div className=\"no-task\">\r\n                No {props.filterStatus} tasks.\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskList","import \"./ToDoApp.css\"\r\nimport \"./AddTaskForm.css\"\r\nimport AddTaskBtnDiv from \"./AddTaskBtnDiv\";\r\nimport TaskList from \"./TaskList\";\r\nimport {connect} from \"react-redux\"\r\n\r\nconst ToDoApp = (props) => {\r\n    return (\r\n        <div className=\"main-box\">\r\n            <h2>To-Do App</h2>\r\n            <AddTaskBtnDiv />\r\n            <TaskList\r\n                filterStatus = \"pending\"\r\n                tasks = {props.tasks}\r\n                />\r\n            <TaskList\r\n                filterStatus=\"done\"\r\n                tasks={props.tasks}\r\n            />\r\n            <div className=\"source\">Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        tasks: state.tasks\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToDoApp);\r\n\r\n","import ToDoApp from \"./components/ToDoApp\";\nimport {Helmet, HelmetProvider} from \"react-helmet-async\";\n\nconst App = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>To-Do App</title>\n      </Helmet>\n      <div>\n        <ToDoApp/>\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    tasks: [\r\n        {name: \"kain\", status: \"pending\"},\r\n        {name: \"ligo\", status: \"pending\"},\r\n        {name: \"tulog\", status: \"done\"}\r\n    ]\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let tasksCopy;\r\n    let taskIndex;\r\n    switch(action.type) {\r\n        case \"ADD_TASK\":\r\n            let newTask = {\r\n                name: action.payload,\r\n                status: \"pending\"\r\n            }\r\n            let updTasks = [...state.tasks, newTask];\r\n            return {\r\n                tasks: updTasks\r\n            }\r\n        case \"MARK_AS_DONE\":\r\n            tasksCopy = [...state.tasks];\r\n            taskIndex = tasksCopy.findIndex((taskItem) => taskItem.name === action.payload);\r\n            tasksCopy[taskIndex].status = \"done\";\r\n            return {\r\n                tasks: tasksCopy\r\n            }\r\n        case \"DELETE_TASK\":\r\n            tasksCopy = [...state.tasks];\r\n            taskIndex = tasksCopy.findIndex((taskItem) => taskItem.name === action.payload);\r\n            tasksCopy.splice(taskIndex,1);\r\n            return {\r\n                tasks: tasksCopy\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import {createStore} from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}